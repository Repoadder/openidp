<?xml version="1.0" encoding="UTF-8"?>
<project name="ant" basedir="../"  >

	<taskdef resource="com/ouncelabs/ounceant/task/ounce.xml"
		classpath="ounceant.jar"/>

	<property name="LM.home" value="${IDP_WS}"/>
	<property name="LM.homesrc" value="${IDP_WS}//$SRC"/>
	<!--Property for PMD

	<property name="PMD.home" value="D:/ciwrkspc//tools/com.cloudbees.jenkins.plugins.customtools.CustomTool//PMD5_0_4/InfosysCodeQualityAnalyserJava5.0.0/pmd5.4.0"/>
	<property name="report.pmd.dir" value="$PMDReportPath"/>
	End of PMD Property-->

	<!--Property for FindBugs
	<property name="findbugs.home.dir" value="$FindBugsHome" />

	<property name="report.findbugs.dir" location="$FindBugsReports" />
	End of FindBugs Property-->
	<!--Property for CheckStyle
	<property name="checkstyle.home.dir" location="$CheckStyleHome" />
	<property name="report.checkstyle.dir" location="$CheckStyleReports" />
	End of CheckStyle Property-->
	<!--Changes for IDP-AppScan integration-->
	<!--Property for AppScan-->
	<property name="AppScanInstallation.dir" value="C:\Program Files\IBM\AppScanSource"/>
	<property name="CLIScriptFile.dir" value="${IDP_WS}/$base/antcliscript.txt"/>
	<property name="OutputLogFile.dir" value="${IDP_WS}/antlog.txt"/>
	<!--End of property AppScan-->

	<!--Property for Junit

	<property name="JUnit.home" value="$JUnitHomeLocation"/>
	End of Junit Property-->

	<!--Property for Cobertura

	<property name="cobertura.dir" value="$COBDIR"/>
	<property name="instrumented.dir" value="$INSTRDIR"/>
	<property name="cobcoverage.xml.dir" value="$COBCOVXML"/>
	<property name="cobcoverage.summaryxml.dir" value="$COBCOVSUMXML"/>
	<property name="cobcoverage.html.dir" value="$COBCOVHTMLDIR"/>


	 End of property Cobertura-->


	<path id="classpath">
		<fileset dir="${IDP_WS}" includes="**"/>
		<fileset dir="${IDP_WS}/../../tools/com.cloudbees.jenkins.plugins.customtools.CustomTool//Junit" includes="**"/>
	</path>

	<target name="init">
		<delete dir="${IDP_WS}//$SRC/bin">
		</delete>

		<mkdir dir="${IDP_WS}//$SRC/bin">
		</mkdir>

	</target>


	<!--Target for Compile-->

	<target name="compile" depends="init">

		<javac srcdir="${LM.homesrc}" debug="yes" destdir="${IDP_WS}//$SRC/bin"
			classpathref="classpath">
		</javac>

	</target>

	<!--End of Target Compile-->


	 
	<!--FindBugs Build
	<target name="findbugs"
		description="Run code analysis over code to check for problems.">

		<available file="${findbugs.home.dir}/lib/findbugs.jar"
			property="findbugs.available" />
		<fail unless="findbugs.available"
			message="Error: FINDBUGS_HOME not set or findbugs.jar not found." />
		<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
			classpath="${findbugs.home.dir}/lib/findbugs-ant.jar" />

		<mkdir dir="${report.findbugs.dir}" />

		<findbugs home="${findbugs.home.dir}" workHard="true"
			output="xml:withMessages" outputFile="${report.findbugs.dir}/findbugs.xml">
			<class location="D:/ciwrkspc/workspace/AndroidAppscan_ant//src/bin" />
		</findbugs>

		<xslt in="${report.findbugs.dir}/findbugs.xml" style="${findbugs.home.dir}/src/xsl/fancy.xsl"
			out="${report.findbugs.dir}/findbugs-default.html" />
	</target>



	<target name="report.findbugs" description="Generate a report on error analysis.">

	</target>
	 End Of FindBugs Build-->
	<!--CheckStyle Build
		<target name="checkstyle" description="Generate a report of code convention violations.">
			<taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties"
				classpath="${checkstyle.home.dir}/checkstyle-6.17-all.jar" />


			<available file="${checkstyle.home.dir}/checkstyle-6.17-all.jar"
				property="checkstyle.available" />
			<fail unless="checkstyle.available"
				message="Error: CHECKSTYLE_HOME not set or checkstyle-6.17-all.jar not found." />
			<mkdir dir="${report.checkstyle.dir}" />


			<checkstyle config="${checkstyle.home.dir}/config/sun_checks.xml"
				failureProperty="checkstyle.failure" failOnViolation="false">
				<formatter type="xml" tofile="${report.checkstyle.dir}/checkstyle_report.xml" />
				<fileset dir="${LM.homesrc}" includes="**/*.java" />
			</checkstyle>
	</target>
	 End Of CheckStyle Build-->

	<!--Invoking SONAR RUNNER EDITOR
	<target name="sonar-idp">
		<java jar="$SRJarLoc" fork="true">
			<arg value="$SRCustomToolPath" />
			<arg value="$DBType" />
			<arg value="$SonarHostURL" />
			<arg value="$SonarJDBCURL" />
			<arg value="$SonarUserName" />
			<arg value="$SonarPwd" />
			<arg value="$FSRoot" />
		</java>
	</target>
	SONAR RUNNER EDITOR ends-->



	<!--New ANT target named ounceCLI for IDP-AppScan integration-->

	<!--AppScan Build-->
	<target name="ounceCli" />
	<ounceCli dir="${AppScanInstallation.dir}" script="${CLIScriptFile.dir}"
		output="${OutputLogFile.dir}" />
	<echo>AppScan Done!</echo>
	<!--End Of AppScan Build-->

	<!--end of the new target-->

	 
	
	 

	<!--	<support dir="D:/ciwrkspc/workspace\AndroidAppscan_ant">
		<include name="**/*.class"/>
	</support> -->

	<!--Target For ejbjar 

	<target name="ejbjar" >
		<delete dir="$EJBDIR">
		</delete>
		<mkdir dir="$EJBDIR">
		</mkdir>
		<ejbjar srcdir="D:/ciwrkspc/workspace/AndroidAppscan_ant//src/bin" descriptordir="$EJBJARXML" destdir="$EJBDIR"
			dependency="full">
			<include  name="**ejb-**.xml"/>
		</ejbjar>
	</target>

	 End of target ejbjar-->

	
	 



	<!--Creating Target for ObfuscationWAR




	<target name="ObfuscationWAR">
		<java jar="$WarPath" fork="true">
			<arg value="$ARG1"/>
			<arg value="$ARG2"/>
			<arg value="$ARG3"/>
			<arg value="$ARG4"/>
			<arg value="$ARG5"/>
			<arg value="$Renaming"/>
			<arg value="$Optimization"/>
			<arg value="$ControlFlow"/>
			<arg value="$StringEncryption"/>
			<arg value="$PreMark"/>
		</java>
		<subant target="default">
			<fileset dir="$DIRPATH" includes="obfuscate.xml"/>
		</subant>
	</target>



	End of Target ObfuscationWAR-->

	<!--Creating Target for ObfuscationJAR



	<target name="ObfuscationJAR">
		<java jar="$JarPath" fork="true">
			<arg value="$JARARG1"/>

			<arg value="$JARARG3"/>
			<arg value="$JARARG4"/>
			<arg value="$Renaming"/>
			<arg value="$Optimization"/>
			<arg value="$ControlFlow"/>
			<arg value="$StringEncryption"/>
			<arg value="$PreMark"/>
			<arg value="$ProjectPath"/>
		</java>

	</target>


	End of Target ObfuscationJAR-->


	<!--Creating Target for  EAR


	<target name="ear" >
		<mkdir dir="build/dir" description="Creating Build Directory" />
		<ear destfile="build/ant.ear" appxml="$ApplicationXML">
			<fileset dir="build" includes="*.jar,*.war" />
		</ear>

	</target>

 End of Target EAR-->



	 

	 
</project>