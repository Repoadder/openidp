/***********************************************************************************************
*
* Copyright 2018 Infosys Ltd.
* Use of this source code is governed by MIT license that can be found in the LICENSE file or at
* https://opensource.org/licenses/MIT.
*
***********************************************************************************************/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.12.20 at 12:10:20 PM IST 
//


package com.infosys.utilities.ntrxunit;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.infosys.Utils.NTRXUnit package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.infosys.Utils.NTRXUnit
     * 
     */
    

    /**
     * Create an instance of {@link TestRun }
     * 
     */
    public TestRun createTestRun() {
        return new TestRun();
    }

    /**
     * Create an instance of {@link TestRun.Results }
     * 
     */
    public TestRun.Results createTestRunResults() {
        return new TestRun.Results();
    }

    /**
     * Create an instance of {@link TestRun.TestEntries }
     * 
     */
    public TestRun.TestEntries createTestRunTestEntries() {
        return new TestRun.TestEntries();
    }

    /**
     * Create an instance of {@link TestRun.TestLists }
     * 
     */
    public TestRun.TestLists createTestRunTestLists() {
        return new TestRun.TestLists();
    }

    /**
     * Create an instance of {@link TestRun.TestDefinitions }
     * 
     */
    public TestRun.TestDefinitions createTestRunTestDefinitions() {
        return new TestRun.TestDefinitions();
    }

    /**
     * Create an instance of {@link TestRun.TestDefinitions.UnitTest }
     * 
     */
    public TestRun.TestDefinitions.UnitTest createTestRunTestDefinitionsUnitTest() {
        return new TestRun.TestDefinitions.UnitTest();
    }

    /**
     * Create an instance of {@link TestRun.ResultSummary }
     * 
     */
    public TestRun.ResultSummary createTestRunResultSummary() {
        return new TestRun.ResultSummary();
    }

    /**
     * Create an instance of {@link TestRun.ResultSummary.ResultFiles }
     * 
     */
    public TestRun.ResultSummary.ResultFiles createTestRunResultSummaryResultFiles() {
        return new TestRun.ResultSummary.ResultFiles();
    }

    /**
     * Create an instance of {@link TestRun.ResultSummary.RunInfos }
     * 
     */
    public TestRun.ResultSummary.RunInfos createTestRunResultSummaryRunInfos() {
        return new TestRun.ResultSummary.RunInfos();
    }

    /**
     * Create an instance of {@link TestRun.TestSettings }
     * 
     */
    public TestRun.TestSettings createTestRunTestSettings() {
        return new TestRun.TestSettings();
    }

    /**
     * Create an instance of {@link TestRun.TestSettings.Execution }
     * 
     */
    public TestRun.TestSettings.Execution createTestRunTestSettingsExecution() {
        return new TestRun.TestSettings.Execution();
    }

    /**
     * Create an instance of {@link TestRun.TestSettings.Execution.AgentRule }
     * 
     */
    public TestRun.TestSettings.Execution.AgentRule createTestRunTestSettingsExecutionAgentRule() {
        return new TestRun.TestSettings.Execution.AgentRule();
    }

    /**
     * Create an instance of {@link TestRun.TestSettings.Execution.AgentRule.DataCollectors }
     * 
     */
    public TestRun.TestSettings.Execution.AgentRule.DataCollectors createTestRunTestSettingsExecutionAgentRuleDataCollectors() {
        return new TestRun.TestSettings.Execution.AgentRule.DataCollectors();
    }

    /**
     * Create an instance of {@link TestRun.TestSettings.Execution.AgentRule.DataCollectors.DataCollector }
     * 
     */
    public TestRun.TestSettings.Execution.AgentRule.DataCollectors.DataCollector createTestRunTestSettingsExecutionAgentRuleDataCollectorsDataCollector() {
        return new TestRun.TestSettings.Execution.AgentRule.DataCollectors.DataCollector();
    }

    /**
     * Create an instance of {@link TestRun.TestSettings.Execution.AgentRule.DataCollectors.DataCollector.Configuration }
     * 
     */
    public TestRun.TestSettings.Execution.AgentRule.DataCollectors.DataCollector.Configuration createTestRunTestSettingsExecutionAgentRuleDataCollectorsDataCollectorConfiguration() {
        return new TestRun.TestSettings.Execution.AgentRule.DataCollectors.DataCollector.Configuration();
    }

    /**
     * Create an instance of {@link TestRun.TestSettings.Execution.AgentRule.DataCollectors.DataCollector.Configuration.CodeCoverage }
     * 
     */
    public TestRun.TestSettings.Execution.AgentRule.DataCollectors.DataCollector.Configuration.CodeCoverage createTestRunTestSettingsExecutionAgentRuleDataCollectorsDataCollectorConfigurationCodeCoverage() {
        return new TestRun.TestSettings.Execution.AgentRule.DataCollectors.DataCollector.Configuration.CodeCoverage();
    }

    /**
     * Create an instance of {@link TestRun.TestSettings.Execution.AgentRule.DataCollectors.DataCollector.Configuration.CodeCoverage.Regular }
     * 
     */
    public TestRun.TestSettings.Execution.AgentRule.DataCollectors.DataCollector.Configuration.CodeCoverage.Regular createTestRunTestSettingsExecutionAgentRuleDataCollectorsDataCollectorConfigurationCodeCoverageRegular() {
        return new TestRun.TestSettings.Execution.AgentRule.DataCollectors.DataCollector.Configuration.CodeCoverage.Regular();
    }

    /**
     * Create an instance of {@link TestRun.TestSettings.Execution.TestTypeSpecific }
     * 
     */
    public TestRun.TestSettings.Execution.TestTypeSpecific createTestRunTestSettingsExecutionTestTypeSpecific() {
        return new TestRun.TestSettings.Execution.TestTypeSpecific();
    }

    /**
     * Create an instance of {@link TestRun.TestSettings.Execution.TestTypeSpecific.WebTestRunConfiguration }
     * 
     */
    public TestRun.TestSettings.Execution.TestTypeSpecific.WebTestRunConfiguration createTestRunTestSettingsExecutionTestTypeSpecificWebTestRunConfiguration() {
        return new TestRun.TestSettings.Execution.TestTypeSpecific.WebTestRunConfiguration();
    }

    /**
     * Create an instance of {@link TestRun.TestSettings.Execution.TestTypeSpecific.WebTestRunConfiguration.Browser }
     * 
     */
    public TestRun.TestSettings.Execution.TestTypeSpecific.WebTestRunConfiguration.Browser createTestRunTestSettingsExecutionTestTypeSpecificWebTestRunConfigurationBrowser() {
        return new TestRun.TestSettings.Execution.TestTypeSpecific.WebTestRunConfiguration.Browser();
    }

    /**
     * Create an instance of {@link TestRun.TestSettings.Execution.TestTypeSpecific.WebTestRunConfiguration.Browser.Headers }
     * 
     */
    public TestRun.TestSettings.Execution.TestTypeSpecific.WebTestRunConfiguration.Browser.Headers createTestRunTestSettingsExecutionTestTypeSpecificWebTestRunConfigurationBrowserHeaders() {
        return new TestRun.TestSettings.Execution.TestTypeSpecific.WebTestRunConfiguration.Browser.Headers();
    }

    /**
     * Create an instance of {@link TestRun.TestSettings.Execution.TestTypeSpecific.UnitTestRunConfig }
     * 
     */
    public TestRun.TestSettings.Execution.TestTypeSpecific.UnitTestRunConfig createTestRunTestSettingsExecutionTestTypeSpecificUnitTestRunConfig() {
        return new TestRun.TestSettings.Execution.TestTypeSpecific.UnitTestRunConfig();
    }

    /**
     * Create an instance of {@link TestRun.TestSettings.Execution.TestTypeSpecific.UnitTestRunConfig.AssemblyResolution }
     * 
     */
    public TestRun.TestSettings.Execution.TestTypeSpecific.UnitTestRunConfig.AssemblyResolution createTestRunTestSettingsExecutionTestTypeSpecificUnitTestRunConfigAssemblyResolution() {
        return new TestRun.TestSettings.Execution.TestTypeSpecific.UnitTestRunConfig.AssemblyResolution();
    }

    /**
     * Create an instance of {@link TestRun.Times }
     * 
     */
    public TestRun.Times createTestRunTimes() {
        return new TestRun.Times();
    }

    /**
     * Create an instance of {@link TestRun.Results.UnitTestResult }
     * 
     */
    public TestRun.Results.UnitTestResult createTestRunResultsUnitTestResult() {
        return new TestRun.Results.UnitTestResult();
    }

    /**
     * Create an instance of {@link TestRun.TestEntries.TestEntry }
     * 
     */
    public TestRun.TestEntries.TestEntry createTestRunTestEntriesTestEntry() {
        return new TestRun.TestEntries.TestEntry();
    }

    /**
     * Create an instance of {@link TestRun.TestLists.TestList }
     * 
     */
    public TestRun.TestLists.TestList createTestRunTestListsTestList() {
        return new TestRun.TestLists.TestList();
    }

    /**
     * Create an instance of {@link TestRun.TestDefinitions.UnitTest.Execution }
     * 
     */
    public TestRun.TestDefinitions.UnitTest.Execution createTestRunTestDefinitionsUnitTestExecution() {
        return new TestRun.TestDefinitions.UnitTest.Execution();
    }

    /**
     * Create an instance of {@link TestRun.TestDefinitions.UnitTest.TestMethod }
     * 
     */
    public TestRun.TestDefinitions.UnitTest.TestMethod createTestRunTestDefinitionsUnitTestTestMethod() {
        return new TestRun.TestDefinitions.UnitTest.TestMethod();
    }

    /**
     * Create an instance of {@link TestRun.ResultSummary.Counters }
     * 
     */
    public TestRun.ResultSummary.Counters createTestRunResultSummaryCounters() {
        return new TestRun.ResultSummary.Counters();
    }

    /**
     * Create an instance of {@link TestRun.ResultSummary.ResultFiles.ResultFile }
     * 
     */
    public TestRun.ResultSummary.ResultFiles.ResultFile createTestRunResultSummaryResultFilesResultFile() {
        return new TestRun.ResultSummary.ResultFiles.ResultFile();
    }

    /**
     * Create an instance of {@link TestRun.ResultSummary.RunInfos.RunInfo }
     * 
     */
    public TestRun.ResultSummary.RunInfos.RunInfo createTestRunResultSummaryRunInfosRunInfo() {
        return new TestRun.ResultSummary.RunInfos.RunInfo();
    }

    /**
     * Create an instance of {@link TestRun.TestSettings.Deployment }
     * 
     */
    public TestRun.TestSettings.Deployment createTestRunTestSettingsDeployment() {
        return new TestRun.TestSettings.Deployment();
    }

    /**
     * Create an instance of {@link TestRun.TestSettings.Execution.AgentRule.DataCollectors.DataCollector.Configuration.CodeCoverage.Regular.CodeCoverageItem }
     * 
     */
    public TestRun.TestSettings.Execution.AgentRule.DataCollectors.DataCollector.Configuration.CodeCoverage.Regular.CodeCoverageItem createTestRunTestSettingsExecutionAgentRuleDataCollectorsDataCollectorConfigurationCodeCoverageRegularCodeCoverageItem() {
        return new TestRun.TestSettings.Execution.AgentRule.DataCollectors.DataCollector.Configuration.CodeCoverage.Regular.CodeCoverageItem();
    }

    /**
     * Create an instance of {@link TestRun.TestSettings.Execution.TestTypeSpecific.WebTestRunConfiguration.Browser.Headers.Header }
     * 
     */
    public TestRun.TestSettings.Execution.TestTypeSpecific.WebTestRunConfiguration.Browser.Headers.Header createTestRunTestSettingsExecutionTestTypeSpecificWebTestRunConfigurationBrowserHeadersHeader() {
        return new TestRun.TestSettings.Execution.TestTypeSpecific.WebTestRunConfiguration.Browser.Headers.Header();
    }

    /**
     * Create an instance of {@link TestRun.TestSettings.Execution.TestTypeSpecific.UnitTestRunConfig.AssemblyResolution.TestDirectory }
     * 
     */
    public TestRun.TestSettings.Execution.TestTypeSpecific.UnitTestRunConfig.AssemblyResolution.TestDirectory createTestRunTestSettingsExecutionTestTypeSpecificUnitTestRunConfigAssemblyResolutionTestDirectory() {
        return new TestRun.TestSettings.Execution.TestTypeSpecific.UnitTestRunConfig.AssemblyResolution.TestDirectory();
    }

}
