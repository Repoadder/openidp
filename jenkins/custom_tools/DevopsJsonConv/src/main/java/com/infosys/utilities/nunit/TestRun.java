//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.03.02 at 08:54:42 PM IST 
//
package com.infosys.utilities.nunit;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = { "commandLine", "testSuite" })
@XmlRootElement(name = "test-run")
public class TestRun {
	@XmlElement(name = "command-line", required = true)
	protected String commandLine;
	@XmlElement(name = "test-suite", required = true)
	protected TestSuite testSuite;
	@XmlAttribute(name = "asserts")
	protected Byte asserts;
	@XmlAttribute(name = "clr-version")
	protected String clrVersion;
	@XmlAttribute(name = "duration")
	protected Float duration;
	@XmlAttribute(name = "end-time")
	protected String endTime;
	@XmlAttribute(name = "engine-version")
	protected String engineVersion;
	@XmlAttribute(name = "failed")
	protected Byte failed;
	@XmlAttribute(name = "id")
	protected Byte id;
	@XmlAttribute(name = "inconclusive")
	protected Byte inconclusive;
	@XmlAttribute(name = "passed")
	protected Byte passed;
	@XmlAttribute(name = "result")
	protected String result;
	@XmlAttribute(name = "skipped")
	protected Byte skipped;
	@XmlAttribute(name = "start-time")
	protected String startTime;
	@XmlAttribute(name = "testcasecount")
	protected Byte testcasecount;
	@XmlAttribute(name = "total")
	protected Byte total;

	public String getCommandLine() {
		return commandLine;
	}

	public void setCommandLine(String value) {
		this.commandLine = value;
	}

	public TestSuite getTestSuite() {
		return testSuite;
	}

	public void setTestSuite(TestSuite value) {
		this.testSuite = value;
	}

	public Byte getAsserts() {
		return asserts;
	}

	public void setAsserts(Byte value) {
		this.asserts = value;
	}

	public String getClrVersion() {
		return clrVersion;
	}

	public void setClrVersion(String value) {
		this.clrVersion = value;
	}

	public Float getDuration() {
		return duration;
	}

	public void setDuration(Float value) {
		this.duration = value;
	}

	public String getEndTime() {
		return endTime;
	}

	public void setEndTime(String value) {
		this.endTime = value;
	}

	public String getEngineVersion() {
		return engineVersion;
	}

	public void setEngineVersion(String value) {
		this.engineVersion = value;
	}

	public Byte getFailed() {
		return failed;
	}

	public void setFailed(Byte value) {
		this.failed = value;
	}

	public Byte getId() {
		return id;
	}

	public void setId(Byte value) {
		this.id = value;
	}

	public Byte getInconclusive() {
		return inconclusive;
	}

	public void setInconclusive(Byte value) {
		this.inconclusive = value;
	}

	public Byte getPassed() {
		return passed;
	}

	public void setPassed(Byte value) {
		this.passed = value;
	}

	public String getResult() {
		return result;
	}

	public void setResult(String value) {
		this.result = value;
	}

	public Byte getSkipped() {
		return skipped;
	}

	public void setSkipped(Byte value) {
		this.skipped = value;
	}

	public String getStartTime() {
		return startTime;
	}

	public void setStartTime(String value) {
		this.startTime = value;
	}

	public Byte getTestcasecount() {
		return testcasecount;
	}

	public void setTestcasecount(Byte value) {
		this.testcasecount = value;
	}

	public Byte getTotal() {
		return total;
	}

	public void setTotal(Byte value) {
		this.total = value;
	}
}
