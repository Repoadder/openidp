//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.10.13 at 02:09:35 PM IST 
//
package com.infosys.utilities.coveragedspriv;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = { "module", "sourceFileNames" })
@XmlRootElement(name = "CoverageDSPriv")
public class CoverageDSPriv {
	@XmlElement(name = "Module", required = true)
	protected CoverageDSPriv.Module module;
	@XmlElement(name = "SourceFileNames")
	protected List<CoverageDSPriv.SourceFileNames> sourceFileNames;

	public CoverageDSPriv.Module getModule() {
		return module;
	}

	public void setModule(CoverageDSPriv.Module value) {
		this.module = value;
	}

	public List<CoverageDSPriv.SourceFileNames> getSourceFileNames() {
		if (sourceFileNames == null) {
			sourceFileNames = new ArrayList<CoverageDSPriv.SourceFileNames>();
		}
		return this.sourceFileNames;
	}

	@XmlAccessorType(XmlAccessType.FIELD)
	@XmlType(name = "", propOrder = { "moduleName", "imageSize", "imageLinkTime", "linesCovered",
			"linesPartiallyCovered", "linesNotCovered", "blocksCovered", "blocksNotCovered", "namespaceTable" })
	public static class Module {
		@XmlElement(name = "ModuleName", required = true)
		protected String moduleName;
		@XmlElement(name = "ImageSize")
		protected int imageSize;
		@XmlElement(name = "ImageLinkTime")
		protected byte imageLinkTime;
		@XmlElement(name = "LinesCovered")
		protected byte linesCovered;
		@XmlElement(name = "LinesPartiallyCovered")
		protected byte linesPartiallyCovered;
		@XmlElement(name = "LinesNotCovered")
		protected short linesNotCovered;
		@XmlElement(name = "BlocksCovered")
		protected byte blocksCovered;
		@XmlElement(name = "BlocksNotCovered")
		protected short blocksNotCovered;
		@XmlElement(name = "NamespaceTable", required = true)
		protected CoverageDSPriv.Module.NamespaceTable namespaceTable;

		public String getModuleName() {
			return moduleName;
		}

		public void setModuleName(String value) {
			this.moduleName = value;
		}

		public int getImageSize() {
			return imageSize;
		}

		public void setImageSize(int value) {
			this.imageSize = value;
		}

		public byte getImageLinkTime() {
			return imageLinkTime;
		}

		public void setImageLinkTime(byte value) {
			this.imageLinkTime = value;
		}

		public byte getLinesCovered() {
			return linesCovered;
		}

		public void setLinesCovered(byte value) {
			this.linesCovered = value;
		}

		public byte getLinesPartiallyCovered() {
			return linesPartiallyCovered;
		}

		public void setLinesPartiallyCovered(byte value) {
			this.linesPartiallyCovered = value;
		}

		public short getLinesNotCovered() {
			return linesNotCovered;
		}

		public void setLinesNotCovered(short value) {
			this.linesNotCovered = value;
		}

		public byte getBlocksCovered() {
			return blocksCovered;
		}

		public void setBlocksCovered(byte value) {
			this.blocksCovered = value;
		}

		public short getBlocksNotCovered() {
			return blocksNotCovered;
		}

		public void setBlocksNotCovered(short value) {
			this.blocksNotCovered = value;
		}

		public CoverageDSPriv.Module.NamespaceTable getNamespaceTable() {
			return namespaceTable;
		}

		public void setNamespaceTable(CoverageDSPriv.Module.NamespaceTable value) {
			this.namespaceTable = value;
		}

		@XmlAccessorType(XmlAccessType.FIELD)
		@XmlType(name = "", propOrder = { "blocksCovered", "blocksNotCovered", "linesCovered", "linesNotCovered",
				"linesPartiallyCovered", "moduleName", "namespaceKeyName", "namespaceName", "clazz" })
		public static class NamespaceTable {
			@XmlElement(name = "BlocksCovered")
			protected byte blocksCovered;
			@XmlElement(name = "BlocksNotCovered")
			protected short blocksNotCovered;
			@XmlElement(name = "LinesCovered")
			protected byte linesCovered;
			@XmlElement(name = "LinesNotCovered")
			protected short linesNotCovered;
			@XmlElement(name = "LinesPartiallyCovered")
			protected byte linesPartiallyCovered;
			@XmlElement(name = "ModuleName", required = true)
			protected String moduleName;
			@XmlElement(name = "NamespaceKeyName", required = true)
			protected String namespaceKeyName;
			@XmlElement(name = "NamespaceName", required = true)
			protected String namespaceName;
			@XmlElement(name = "Class")
			protected List<CoverageDSPriv.Module.NamespaceTable.Class> clazz;

			public byte getBlocksCovered() {
				return blocksCovered;
			}

			public void setBlocksCovered(byte value) {
				this.blocksCovered = value;
			}

			public short getBlocksNotCovered() {
				return blocksNotCovered;
			}

			public void setBlocksNotCovered(short value) {
				this.blocksNotCovered = value;
			}

			public byte getLinesCovered() {
				return linesCovered;
			}

			public void setLinesCovered(byte value) {
				this.linesCovered = value;
			}

			public short getLinesNotCovered() {
				return linesNotCovered;
			}

			public void setLinesNotCovered(short value) {
				this.linesNotCovered = value;
			}

			public byte getLinesPartiallyCovered() {
				return linesPartiallyCovered;
			}

			public void setLinesPartiallyCovered(byte value) {
				this.linesPartiallyCovered = value;
			}

			public String getModuleName() {
				return moduleName;
			}

			public void setModuleName(String value) {
				this.moduleName = value;
			}

			public String getNamespaceKeyName() {
				return namespaceKeyName;
			}

			public void setNamespaceKeyName(String value) {
				this.namespaceKeyName = value;
			}

			public String getNamespaceName() {
				return namespaceName;
			}

			public void setNamespaceName(String value) {
				this.namespaceName = value;
			}

			public List<CoverageDSPriv.Module.NamespaceTable.Class> getClazz() {
				if (clazz == null) {
					clazz = new ArrayList<CoverageDSPriv.Module.NamespaceTable.Class>();
				}
				return this.clazz;
			}

			@XmlAccessorType(XmlAccessType.FIELD)
			@XmlType(name = "", propOrder = { "classKeyName", "className", "linesCovered", "linesNotCovered",
					"linesPartiallyCovered", "blocksCovered", "blocksNotCovered", "namespaceKeyName", "method" })
			public static class Class {
				@XmlElement(name = "ClassKeyName", required = true)
				protected String classKeyName;
				@XmlElement(name = "ClassName", required = true)
				protected String className;
				@XmlElement(name = "LinesCovered")
				protected byte linesCovered;
				@XmlElement(name = "LinesNotCovered")
				protected byte linesNotCovered;
				@XmlElement(name = "LinesPartiallyCovered")
				protected byte linesPartiallyCovered;
				@XmlElement(name = "BlocksCovered")
				protected byte blocksCovered;
				@XmlElement(name = "BlocksNotCovered")
				protected byte blocksNotCovered;
				@XmlElement(name = "NamespaceKeyName", required = true)
				protected String namespaceKeyName;
				@XmlElement(name = "Method")
				protected List<CoverageDSPriv.Module.NamespaceTable.Class.Method> method;

				public String getClassKeyName() {
					return classKeyName;
				}

				public void setClassKeyName(String value) {
					this.classKeyName = value;
				}

				public String getClassName() {
					return className;
				}

				public void setClassName(String value) {
					this.className = value;
				}

				public byte getLinesCovered() {
					return linesCovered;
				}

				public void setLinesCovered(byte value) {
					this.linesCovered = value;
				}

				public byte getLinesNotCovered() {
					return linesNotCovered;
				}

				public void setLinesNotCovered(byte value) {
					this.linesNotCovered = value;
				}

				public byte getLinesPartiallyCovered() {
					return linesPartiallyCovered;
				}

				public void setLinesPartiallyCovered(byte value) {
					this.linesPartiallyCovered = value;
				}

				public byte getBlocksCovered() {
					return blocksCovered;
				}

				public void setBlocksCovered(byte value) {
					this.blocksCovered = value;
				}

				public byte getBlocksNotCovered() {
					return blocksNotCovered;
				}

				public void setBlocksNotCovered(byte value) {
					this.blocksNotCovered = value;
				}

				public String getNamespaceKeyName() {
					return namespaceKeyName;
				}

				public void setNamespaceKeyName(String value) {
					this.namespaceKeyName = value;
				}

				public List<CoverageDSPriv.Module.NamespaceTable.Class.Method> getMethod() {
					if (method == null) {
						method = new ArrayList<CoverageDSPriv.Module.NamespaceTable.Class.Method>();
					}
					return this.method;
				}

				@XmlAccessorType(XmlAccessType.FIELD)
				@XmlType(name = "", propOrder = { "methodKeyName", "methodName", "methodFullName", "linesCovered",
						"linesPartiallyCovered", "linesNotCovered", "blocksCovered", "blocksNotCovered", "lines" })
				public static class Method {
					@XmlElement(name = "MethodKeyName", required = true)
					protected String methodKeyName;
					@XmlElement(name = "MethodName", required = true)
					protected String methodName;
					@XmlElement(name = "MethodFullName", required = true)
					protected String methodFullName;
					@XmlElement(name = "LinesCovered")
					protected byte linesCovered;
					@XmlElement(name = "LinesPartiallyCovered")
					protected byte linesPartiallyCovered;
					@XmlElement(name = "LinesNotCovered")
					protected byte linesNotCovered;
					@XmlElement(name = "BlocksCovered")
					protected byte blocksCovered;
					@XmlElement(name = "BlocksNotCovered")
					protected byte blocksNotCovered;
					@XmlElement(name = "Lines")
					protected List<CoverageDSPriv.Module.NamespaceTable.Class.Method.Lines> lines;

					public String getMethodKeyName() {
						return methodKeyName;
					}

					public void setMethodKeyName(String value) {
						this.methodKeyName = value;
					}

					public String getMethodName() {
						return methodName;
					}

					public void setMethodName(String value) {
						this.methodName = value;
					}

					public String getMethodFullName() {
						return methodFullName;
					}

					public void setMethodFullName(String value) {
						this.methodFullName = value;
					}

					public byte getLinesCovered() {
						return linesCovered;
					}

					public void setLinesCovered(byte value) {
						this.linesCovered = value;
					}

					public byte getLinesPartiallyCovered() {
						return linesPartiallyCovered;
					}

					public void setLinesPartiallyCovered(byte value) {
						this.linesPartiallyCovered = value;
					}

					public byte getLinesNotCovered() {
						return linesNotCovered;
					}

					public void setLinesNotCovered(byte value) {
						this.linesNotCovered = value;
					}

					public byte getBlocksCovered() {
						return blocksCovered;
					}

					public void setBlocksCovered(byte value) {
						this.blocksCovered = value;
					}

					public byte getBlocksNotCovered() {
						return blocksNotCovered;
					}

					public void setBlocksNotCovered(byte value) {
						this.blocksNotCovered = value;
					}

					public List<CoverageDSPriv.Module.NamespaceTable.Class.Method.Lines> getLines() {
						if (lines == null) {
							lines = new ArrayList<CoverageDSPriv.Module.NamespaceTable.Class.Method.Lines>();
						}
						return this.lines;
					}

					@XmlAccessorType(XmlAccessType.FIELD)
					@XmlType(name = "", propOrder = { "lnStart", "colStart", "lnEnd", "colEnd", "coverage",
							"sourceFileID", "lineID" })
					public static class Lines {
						@XmlElement(name = "LnStart")
						protected byte lnStart;
						@XmlElement(name = "ColStart")
						protected byte colStart;
						@XmlElement(name = "LnEnd")
						protected byte lnEnd;
						@XmlElement(name = "ColEnd")
						protected short colEnd;
						@XmlElement(name = "Coverage")
						protected byte coverage;
						@XmlElement(name = "SourceFileID")
						protected byte sourceFileID;
						@XmlElement(name = "LineID")
						protected short lineID;

						public byte getLnStart() {
							return lnStart;
						}

						public void setLnStart(byte value) {
							this.lnStart = value;
						}

						public byte getColStart() {
							return colStart;
						}

						public void setColStart(byte value) {
							this.colStart = value;
						}

						public byte getLnEnd() {
							return lnEnd;
						}

						public void setLnEnd(byte value) {
							this.lnEnd = value;
						}

						public short getColEnd() {
							return colEnd;
						}

						public void setColEnd(short value) {
							this.colEnd = value;
						}

						public byte getCoverage() {
							return coverage;
						}

						public void setCoverage(byte value) {
							this.coverage = value;
						}

						public byte getSourceFileID() {
							return sourceFileID;
						}

						public void setSourceFileID(byte value) {
							this.sourceFileID = value;
						}

						public short getLineID() {
							return lineID;
						}

						public void setLineID(short value) {
							this.lineID = value;
						}
					}
				}
			}
		}
	}

	@XmlAccessorType(XmlAccessType.FIELD)
	@XmlType(name = "", propOrder = { "sourceFileID", "sourceFileName" })
	public static class SourceFileNames {
		@XmlElement(name = "SourceFileID")
		protected byte sourceFileID;
		@XmlElement(name = "SourceFileName", required = true)
		protected String sourceFileName;

		public byte getSourceFileID() {
			return sourceFileID;
		}

		public void setSourceFileID(byte value) {
			this.sourceFileID = value;
		}

		public String getSourceFileName() {
			return sourceFileName;
		}

		public void setSourceFileName(String value) {
			this.sourceFileName = value;
		}
	}
}
